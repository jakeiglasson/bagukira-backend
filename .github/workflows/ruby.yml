# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Verification

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  RUBY_VERSION: 2.7.1
  RAILS_MASTER_KEY: ${ { secrets.RAILS_MASTER_KEY } }
  POSTGRES_USER: ${ { secrets.PGUSER } }
  POSTGRES_PASSWORD: ${ { secrets.PGPASSWORD } }
  POSTGRES_DB: bagukira_backend_test
  RAILS_ENV: test
  PGHOST: 127.0.0.1
  PGUSER: ${ { secrets.PGUSER } }
  PGPASSWORD: ${ { secrets.PGPASSWORD } }

jobs:
  linters:
    name: Linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
      - name: Ruby gem cache
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run linters
        run: |
          bin/rubocop --parallel
      - name: Run security checks
        run: |
          bin/bundler-audit --update

  tests:
    name: Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
      - name: Ruby gem cache
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Setup test database
        run: |
          bin/rails db:setup

      - name: Run tests
        run: bin/rspec
